grammar Wikitext
  rule document
    (heading_sequence / paragraph_sequence)+ {
      def to_s
        elements.collect{|e| e.to_s}.join
      end
    }
  end

  rule heading_sequence
    heading_1 / heading_2
  end
  
  rule heading_1
    heading_1_delimiter body:(!heading_delimiter plain_char)+ heading_1_delimiter {
      def to_s
        '<h1>' + body.elements.collect{|e| e.plain_char.to_s}.join.strip + '</h1>'
      end
    }
  end
  
  rule heading_2
    heading_2_delimiter body:(!heading_delimiter plain_char)+ heading_2_delimiter {
      def to_s
        '<h2>' + body.elements.collect{|e| e.plain_char.to_s}.join.strip + '</h2>'
      end
    }
  end
  
  rule paragraph_sequence
    first_paragraph:paragraph other_paragraphs:(paragraph_break content:paragraph)* {
      def paragraphs
        [first_paragraph] + other_paragraphs
      end
      
      def other_paragraphs
        super.elements.collect{|p| p.content}
      end
 
      def to_s
        paragraphs.collect{|p| p.to_s}.join
      end
   }
  end
  
  rule paragraph_break
    "\n" "\n"+
  end

  rule paragraph
    !heading_delimiter chunks:(text_chunk+) {
      def to_s
        '<p>' + chunks.elements.collect{|e| e.to_s}.join + '</p>'
      end
    }
  end
  
  rule text_chunk
    plain_text / bold_text / italic_text
  end

  rule bold_text
    start:bold_delimiter body:(plain_text / italic_text)+ end:bold_delimiter {
      def to_s
        '<b>' + body.elements.collect{|e| e.to_s}.join + '</b>'
      end
    }
  end
  
  rule italic_text
    start:italics_delimiter !"'" body:(plain_text / bold_text)+ end:italics_delimiter {
      def to_s
        '<i>' + body.elements.collect{|e| e.to_s}.join + '</i>'
      end
    }
  end
  
  rule plain_text
    (!delimiter !paragraph_break plain_char)+ {
      def to_s
        elements.collect{|e| e.plain_char.to_s}.join
      end
    }
  end
  
  rule plain_char
    . {
      def to_s
        ERB::Util::h text_value
      end
    }
  end
  
  rule delimiter
    bold_delimiter / italics_delimiter
  end
  
  rule bold_delimiter
    "'''"
  end
  
  rule italics_delimiter
    "''"
  end
  
  rule heading_delimiter
    "\n="
  end

  rule heading_1_delimiter
    '='
  end

  rule heading_2_delimiter
    '=='
  end
end